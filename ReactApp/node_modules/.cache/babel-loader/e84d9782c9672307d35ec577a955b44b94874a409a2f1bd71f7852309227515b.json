{"ast":null,"code":"var fs = require('fs'),\n  EventEmitter = require('events').EventEmitter,\n  util = require('util');\nvar readLine = module.exports = function (file, opts) {\n  if (!(this instanceof readLine)) return new readLine(file, opts);\n  EventEmitter.call(this);\n  opts = opts || {};\n  opts.maxLineLength = opts.maxLineLength || 4096; // 4K\n  opts.retainBuffer = !!opts.retainBuffer; //do not convert to String prior to invoking emit 'line' event\n  var self = this,\n    lineBuffer = new Buffer(opts.maxLineLength),\n    lineLength = 0,\n    lineCount = 0,\n    byteCount = 0,\n    emit = function (lineCount, byteCount) {\n      try {\n        var line = lineBuffer.slice(0, lineLength);\n        self.emit('line', opts.retainBuffer ? line : line.toString(), lineCount, byteCount);\n      } catch (err) {\n        self.emit('error', err);\n      } finally {\n        lineLength = 0; // Empty buffer.\n      }\n    };\n\n  this.input = 'string' === typeof file ? fs.createReadStream(file, opts) : file;\n  this.input.on('open', function (fd) {\n    self.emit('open', fd);\n  }).on('data', function (data) {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i] == 10 || data[i] == 13) {\n        // Newline char was found.\n        if (data[i] == 10) {\n          lineCount++;\n          emit(lineCount, byteCount);\n        }\n      } else {\n        lineBuffer[lineLength] = data[i]; // Buffer new line data.\n        lineLength++;\n      }\n      byteCount++;\n    }\n  }).on('error', function (err) {\n    self.emit('error', err);\n  }).on('end', function () {\n    // Emit last line if anything left over since EOF won't trigger it.\n    if (lineLength) {\n      lineCount++;\n      emit(lineCount, byteCount);\n    }\n    self.emit('end');\n  }).on('close', function () {\n    self.emit('close');\n  });\n};\nutil.inherits(readLine, EventEmitter);","map":{"version":3,"names":["fs","require","EventEmitter","util","readLine","module","exports","file","opts","call","maxLineLength","retainBuffer","self","lineBuffer","Buffer","lineLength","lineCount","byteCount","emit","line","slice","toString","err","input","createReadStream","on","fd","data","i","length","inherits"],"sources":["/Users/jcarrier/Desktop/Dev/React/Bible-Project/ReactApp/node_modules/linebyline/readline.js"],"sourcesContent":["var fs = require('fs'),\n    EventEmitter = require('events').EventEmitter,\n    util = require('util');\n\nvar readLine = module.exports = function(file, opts) {\n  if (!(this instanceof readLine)) return new readLine(file, opts);\n\n  EventEmitter.call(this);\n  opts = opts || {};\n  opts.maxLineLength = opts.maxLineLength || 4096; // 4K\n  opts.retainBuffer = !!opts.retainBuffer; //do not convert to String prior to invoking emit 'line' event\n  var self = this,\n      lineBuffer = new Buffer(opts.maxLineLength),\n      lineLength = 0,\n      lineCount = 0,\n      byteCount = 0,\n      emit = function(lineCount, byteCount) {\n        try {\n          var line = lineBuffer.slice(0, lineLength);\n          self.emit('line', opts.retainBuffer? line : line.toString(), lineCount, byteCount);\n        } catch (err) {\n          self.emit('error', err);\n        } finally {\n          lineLength = 0; // Empty buffer.\n        }\n      };\n  this.input = ('string' === typeof file) ? fs.createReadStream(file, opts) : file;\n  this.input.on('open', function(fd) {\n      self.emit('open', fd);\n    })\n    .on('data', function(data) {\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] == 10 || data[i] == 13) { // Newline char was found.\n          if (data[i] == 10) {\n            lineCount++;\n            emit(lineCount, byteCount);\n          }\n        } else {\n          lineBuffer[lineLength] = data[i]; // Buffer new line data.\n          lineLength++;\n        }\n        byteCount++;\n      }\n    })\n    .on('error', function(err) {\n      self.emit('error', err);\n    })\n    .on('end', function() {\n      // Emit last line if anything left over since EOF won't trigger it.\n      if (lineLength) {\n        lineCount++;\n        emit(lineCount, byteCount);\n      }\n      self.emit('end');\n    })\n    .on('close', function() {\n      self.emit('close');\n    });\n};\nutil.inherits(readLine, EventEmitter);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}